openapi: 3.0.0
info:
  title: cohort-middleware
  version: 0.1.4
  description: cohort-middleware to manage OMOP data
  contact:
    name: CTDS
    url: 'https://ctds.uchicago.edu'
    email: ctds@uchicag.edu
  license:
    name: Apache 2.0
servers:
  - url: 'http://localhost:3000'
paths:
  /_health:
    get:
      summary: Get /_health
      tags:
        - operational
      operationId: get-_health
      description: Returns cohort-middleware health status
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                description: ''
                example: ok!
                enum:
                  - ok!
          headers: {}
      security: []
  /_version:
    get:
      summary: Get /_version
      tags:
        - operational
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  version:
                    type: object
                    required:
                      - GitCommit
                      - GitVersion
                    properties:
                      GitCommit:
                        type: string
                        minLength: 1
                        example: aaff5cd16dd714af823ace2dfce16a9ba7691533
                      GitVersion:
                        type: string
                        minLength: 1
                        example: aaff5cd
                required:
                  - version
      operationId: get-_version
      description: Get deployed cohort-middleware version
      security: []
  '/source/by-id/{id}':
    get:
      summary: 'Get /source/by-id/{id}'
      tags:
        - data
      responses:
        '200':
          $ref: '#/components/responses/source'
        '400':
          $ref: '#/components/responses/bad_request'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - Error to retrieve source
                    example: Error to retrieve source
                  error:
                    type: string
                    minLength: 1
                required:
                  - message
                  - error
      operationId: 'get-source-by-id-:id'
      description: Get source by source id
      parameters: []
      security:
        - Bearer: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/source/by-name/{name}':
    get:
      summary: 'Get /source/by-name/{name}'
      tags:
        - data
      responses:
        '200':
          $ref: '#/components/responses/source'
        '400':
          $ref: '#/components/responses/bad_request'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - Error to retrieve source
                    example: Error to retrieve source
                  error:
                    type: string
                    minLength: 1
                required:
                  - message
                  - error
      operationId: 'get-source-by-name-:name'
      description: Get source by source name
      parameters: []
      security:
        - Bearer: []
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
  /sources:
    get:
      summary: Get /sources
      tags:
        - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  sources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Source'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    example: Error to retrieve source
                    enum:
                      - Error to retrieve source
                  error:
                    type: string
                    minLength: 1
                required:
                  - message
                  - error
      operationId: get-sources
      description: Get all available sources
      parameters: []
      security:
        - Bearer: []
    parameters: []
  '/cohortdefinition/by-id/{id}':
    get:
      summary: 'Get /cohortdefinition/by-id/{id}'
      tags:
        - data
      responses:
        '200':
          $ref: '#/components/responses/cohort_definition'
        '400':
          $ref: '#/components/responses/bad_request'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - Error retrieving cohortDefinition
                    example: Error retrieving cohortDefinition
                  error:
                    type: string
                    minLength: 1
                required:
                  - message
                  - error
      operationId: 'get-cohortdefinition-by-id-:id'
      description: Get cohort definition by id
      parameters: []
      security:
        - Bearer: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  '/cohortdefinition/by-name/{name}':
    get:
      summary: 'Get /cohortdefinition/by-name/{name}'
      tags:
        - data
      responses:
        '200':
          $ref: '#/components/responses/cohort_definition'
        '400':
          $ref: '#/components/responses/bad_request'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - Error retrieving cohortDefinition
                    example: Error retrieving cohortDefinition
                  error:
                    type: string
                    minLength: 1
                required:
                  - message
                  - error
      operationId: get-cohortdefinition-by-name
      security:
        - Bearer: []
      description: Get cohort definition by name
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
  /cohortdefinitions:
    get:
      summary: Get /cohortdefinitions
      tags:
        - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  cohort_definitions:
                    type: array
                    items:
                      $ref: '#/components/schemas/CohortDefinition'
              examples:
                example-1:
                  value:
                    cohort_definitions:
                      - cohort_definition_id: 9
                        cohort_name: Diabetes
                        cohort_description: Cohort with diagnosed diabetes disease
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - Error retrieving cohortDefinition
                    example: Error retrieving cohortDefinition
                  error:
                    type: string
                    minLength: 1
                required:
                  - message
                  - error
      operationId: get-cohortdefinitions
      security:
        - Bearer: []
      description: Get all available cohort definitions
  '/cohortdefinition-stats/by-source-id/{sourceid}':
    get:
      summary: 'Get /cohortdefinition-stats/by-source-id/{sourceid}'
      tags:
        - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '400':
          $ref: '#/components/responses/bad_request'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - Error retrieving cohortDefinition
                    example: Error retrieving cohortDefinition
                  error:
                    type: string
                    minLength: 1
                required:
                  - message
                  - error
      operationId: get-cohortdefinition-stats-by-source-id
      security:
        - Bearer: []
      x-internal: true
      description: Get cohort definition statistics by source id
      parameters: []
    parameters:
      - $ref: '#/components/parameters/sourceid'
  '/concept/by-source-id/{sourceid}':
    get:
      summary: 'Get /concept/by-source-id/{sourceid}'
      tags:
        - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  concepts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Concept'
        '400':
          $ref: '#/components/responses/bad_request'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - Error retrieving concept details
                    example: Error retrieving concept details
                  error:
                    type: string
                    minLength: 1
                required:
                  - message
                  - error
      operationId: get-concept-by-source-id-2
      security:
        - Bearer: []
      description: Get concept by sources
    parameters:
      - $ref: '#/components/parameters/sourceid'
  '/concept/by-source-id/{sourceid} ':
    parameters:
      - $ref: '#/components/parameters/sourceid'
    post:
      summary: 'Post /concept/by-source-id/{sourceid}'
      tags:
        - data
      operationId: post-concept-by-source-id-sourceid
      security:
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ConceptIds:
                  type: array
                  items:
                    type: integer
            examples:
              example-1:
                value:
                  ConceptIds:
                    - 2000000324
                    - 2000006885
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  concepts:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - concept_id
                        - prefixed_concept_id
                        - concept_name
                        - concept_type
                      properties:
                        concept_id:
                          type: number
                        prefixed_concept_id:
                          type: string
                          minLength: 1
                        concept_name:
                          type: string
                          minLength: 1
                        concept_type:
                          type: string
                          minLength: 1
                required:
                  - concepts
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - bad request - no request body
                      - bad request
                    example: bad request
                required:
                  - message
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - Error retrieving concept details
                  error:
                    type: string
                    minLength: 1
                required:
                  - message
                  - error
      description: Get concepts by source id and list of concept ids
  '/concept/by-source-id/{sourceid}/by-type':
    parameters:
      - $ref: '#/components/parameters/sourceid'
    post:
      summary: 'Post /concept/by-source-id/{sourceid}'
      tags:
        - data
      operationId: post-concept-by-source-id-sourceid-by-type
      security:
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ConceptTypes:
                  type: array
                  items:
                    type: string
            examples:
              example-1:
                value:
                  ConceptTypes:
                    - Concept TypeA
                    - Concept TypeB
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  concepts:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - concept_id
                        - prefixed_concept_id
                        - concept_name
                        - concept_type
                      properties:
                        concept_id:
                          type: number
                        prefixed_concept_id:
                          type: string
                          minLength: 1
                        concept_name:
                          type: string
                          minLength: 1
                        concept_type:
                          type: string
                          minLength: 1
                required:
                  - concepts
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - bad request - no request body
                      - bad request
                    example: bad request
                required:
                  - message
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - Error retrieving concept details
                  error:
                    type: string
                    minLength: 1
                required:
                  - message
                  - error
      description: Get concepts by source id and list of concept types
  '/concept-stats/by-source-id/{sourceid}/by-cohort-definition-id/{cohortid}':
    parameters:
      - $ref: '#/components/parameters/sourceid'
      - $ref: '#/components/parameters/cohortid'
    post:
      summary: 'Post /concept-stats/by-source-id/{sourceid}/by-cohort-definition-id/{cohortid}'
      operationId: post-concept-stats-by-source-id-sourceid-by-cohort-definition-id-cohortid
      security:
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ConceptIds:
                  type: array
                  items:
                    type: integer
            examples:
              example-1:
                value:
                  ConceptIds:
                    - 2000000324
                    - 2000006885
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  concepts:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - concept_id
                        - prefixed_concept_id
                        - concept_name
                        - concept_type
                        - cohort_size
                        - n_missing_ratio
                      properties:
                        concept_id:
                          type: number
                        prefixed_concept_id:
                          type: string
                          minLength: 1
                        concept_name:
                          type: string
                          minLength: 1
                        concept_type:
                          type: string
                          minLength: 1
                        cohort_size:
                          type: number
                        n_missing_ratio:
                          type: number
                required:
                  - concepts
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - bad request - no request body
                      - bad request
                    example: bad request
                required:
                  - message
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - Error retrieving concept details
                  error:
                    type: string
                    minLength: 1
                required:
                  - message
                  - error
      description: Get concept statistics by source id
      tags:
        - data
  '/concept-stats/by-source-id/{sourceid}/by-cohort-definition-id/{cohortid}/breakdown-by-concept-id/{breakdownconceptid}':
    parameters:
      - $ref: '#/components/parameters/sourceid'
      - $ref: '#/components/parameters/cohortid'
      - $ref: '#/components/parameters/breakdownconceptid'
    post:
      summary: 'Post /concept-stats/by-source-id/{sourceid}/by-cohort-definition-id/{cohortid}/breakdown-by-concept-id/{breakdownconceptid}'
      operationId: post-concept-stats-by-source-id-sourceid-by-cohort-definition-id-cohortid-breakdown-by-concept-id-breakdownconceptid
      security:
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                variables:
                  type: array
                  items:
                    type: object
            examples:
              example-1:
                value:
                  variables:
                    - variable_type: concept
                      concept_id: 2000000324
                    - variable_type: concept
                      concept_id: 2000006885
                    - variable_type: custom_dichotomous
                      cohort_ids:
                        - 1
                        - 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  concept_breakdown:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - concept_value
                        - persons_in_cohort_with_value
                      properties:
                        concept_value:
                          type: string
                          minLength: 1
                        persons_in_cohort_with_value:
                          type: number
                required:
                  - concept_breakdown
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - bad request - no request body
                      - bad request
                    example: bad request
                required:
                  - message
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - Error retrieving concept details
                  error:
                    type: string
                    minLength: 1
                required:
                  - message
                  - error
      description: 'Get statistics for given cohort id, filtered to count only persons that have values in one or more concepts (defined in POST request body), and broken down by concept values of the given breakdown concept id'
      tags:
        - data
  '/concept-stats/by-source-id/{sourceid}/by-cohort-definition-id/{cohortid}/breakdown-by-concept-id/{breakdownconceptid} ':
    parameters:
      - $ref: '#/components/parameters/sourceid'
      - $ref: '#/components/parameters/cohortid'
      - $ref: '#/components/parameters/breakdownconceptid'
    get:
      summary: 'Get /concept-stats/by-source-id/{sourceid}/by-cohort-definition-id/{cohortid}/breakdown-by-concept-id/{breakdownconceptid}'
      operationId: get-concept-stats-by-source-id-sourceid-by-cohort-definition-id-cohortid-breakdown-by-concept-id-breakdownconceptid
      security:
        - Bearer: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  concept_breakdown:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - concept_value
                        - persons_in_cohort_with_value
                      properties:
                        concept_value:
                          type: string
                          minLength: 1
                        persons_in_cohort_with_value:
                          type: number
                required:
                  - concept_breakdown
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - bad request - no request body
                      - bad request
                    example: bad request
                required:
                  - message
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - Error retrieving concept details
                  error:
                    type: string
                    minLength: 1
                required:
                  - message
                  - error
      description: 'Get statistics for size of given cohort id, broken down by concept values of the given breakdown concept id'
      tags:
        - data
  '/cohort-stats/check-overlap/by-source-id/{sourceid}/by-case-control-cohort-definition-ids/{casecohortid}/{controlcohortid}/filter-by-concept-id-and-value/{filterconceptid}/{filtervalue}':
    parameters:
      - $ref: '#/components/parameters/sourceid'
      - $ref: '#/components/parameters/casecohortid'
      - $ref: '#/components/parameters/controlcohortid'
      - $ref: '#/components/parameters/filterconceptid'
      - $ref: '#/components/parameters/filtervalue'
    post:
      summary: 'Post /cohort-stats/check-overlap/by-source-id/{sourceid}/by-case-control-cohort-definition-ids/{casecohortid}/{controlcohortid}/filter-by-concept-id-and-value/{filterconceptid}/{filtervalue}'
      operationId: post-cohort-stats-check-overlap-by-source-id-by-case-control-cohort-definition-ids-filter-by-concept-id-and-value
      security:
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                variables:
                  type: array
                  items:
                    type: object
            examples:
              example-1:
                value:
                  variables:
                    - variable_type: concept
                      concept_id: 2000000324
                    - variable_type: concept
                      concept_id: 2000006885
                    - variable_type: custom_dichotomous
                      cohort_ids:
                        - 1
                        - 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  cohort_overlap:
                    type: object
                    properties:
                      case_control_overlap:
                        type: number
                required:
                  - cohort_overlap
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - bad request - no request body
                      - bad request
                    example: bad request
                required:
                  - message
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - Error retrieving concept details
                  error:
                    type: string
                    minLength: 1
                required:
                  - message
                  - error
      description: Assesses the overlap between any two cohorts (here just labelled as "case" and "control" - but could have been "A" and "B"). It does this after filtering the cohorts and keeping only the persons that have data for each of the selected conceptIds and match the filterConceptId/filterConceptValue criterion.
      tags:
        - data
  '/cohort-stats/check-overlap/by-source-id/{sourceid}/by-cohort-definition-ids/{casecohortid}/{controlcohortid}':
    parameters:
      - name: sourceid
        in: path
        required: true
        schema:
          type: number
      - name: casecohortid
        in: path
        required: true
        schema:
          type: number
      - name: controlcohortid
        in: path
        required: true
        schema:
          type: number
    post:
      summary: 'Post /cohort-stats/check-overlap/by-source-id/{sourceid}/by-cohort-definition-ids/{casecohortid}/{controlcohortid}'
      operationId: post-cohort-stats-check-overlap-by-source-id-by-cohort-definition-ids
      security:
        - Bearer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                variables:
                  type: array
                  items:
                    type: object
            examples:
              example-1:
                value:
                  variables:
                    - variable_type: concept
                      concept_id: 2000000324
                    - variable_type: concept
                      concept_id: 2000006885
                    - variable_type: custom_dichotomous
                      cohort_ids:
                        - 1
                        - 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  cohort_overlap:
                    type: object
                    properties:
                      case_control_overlap:
                        type: number
                required:
                  - cohort_overlap
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - bad request - no request body
                      - bad request
                    example: bad request
                required:
                  - message
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - Error retrieving concept details
                  error:
                    type: string
                    minLength: 1
                required:
                  - message
                  - error
      description: Assesses the overlap between any two given cohorts (here just labelled as "case" and "control" - but could have been "A" and "B"). It does this after filtering the cohorts and keeping only the persons that have data for each of the selected conceptIds and custom dichotomous variable groups.
      tags:
        - data
  '/cohort-data/by-source-id/{sourceid}/by-cohort-definition-id/{cohortid}':
    parameters:
      - $ref: '#/components/parameters/sourceid'
      - $ref: '#/components/parameters/cohortid'
    post:
      summary: 'Post /cohort-data/by-source-id/{sourceid}/by-cohort-definition-id/{cohortid}'
      operationId: post-cohort-data-by-source-id-sourceid-by-cohort-definition-id-cohortid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                variables:
                  type: array
                  items:
                    type: object
            examples:
              example-1:
                value:
                  variables:
                    - variable_type: concept
                      concept_id: 2000000324
                    - variable_type: concept
                      concept_id: 2000006885
                    - variable_type: custom_dichotomous
                      cohort_ids:
                        - 1
                        - 2
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              examples:
                example-1:
                  value: 'sample.id,ID_concept_id1,ID_concept_id2\n1,"A value with, comma!",B\n2,Simple value,NA'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - bad request
                      - bad request - no valid request body
                required:
                  - message
              examples:
                example-1:
                  value:
                    message: bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    enum:
                      - Error retrieving concept details
                  error:
                    type: string
                    minLength: 1
                required:
                  - message
                  - error
      security:
        - Bearer: []
      x-internal: true
      description: Get cohort data by source id and list of prefixed concept id strings
      tags:
        - data
components:
  schemas:
    CohortDefinition:
      description: ''
      type: object
      properties:
        cohort_definition_id:
          type: number
          example: 9
        cohort_name:
          type: string
          minLength: 1
          example: Diabetes
        cohort_description:
          type: string
          minLength: 1
          example: Cohort with diagnosed diabetes disease
      required:
        - cohort_definition_id
        - cohort_name
        - cohort_description
    Source:
      description: ''
      type: object
      properties:
        source:
          type: object
          required:
            - source_id
            - source_name
          properties:
            source_id:
              type: number
              example: 9
            source_name:
              type: string
              minLength: 1
              example: OMOP
      required:
        - source
    Concept:
      description: ''
      type: object
      properties:
        concept_id:
          type: string
        concept_name:
          type: string
        concept_type:
          type: string
      required:
        - concept_id
        - concept_name
        - concept_type
  securitySchemes:
    Bearer:
      name: Authorization
      type: apiKey
      in: header
      description: ''
  responses:
    cohort_definition:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              cohort_definition:
                $ref: '#/components/schemas/CohortDefinition'
          examples:
            example-1:
              value:
                cohort_definition:
                  cohort_definition_id: 9
                  cohort_name: Diabetes
                  cohort_description: Cohort with diagnosed diabetes disease
    bad_request:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
                enum:
                  - bad request
                example: bad request
            required:
              - message
          examples:
            example-1:
              value:
                message: bad request
    source:
      description: Example response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Source'
  parameters:
    sourceid:
      name: sourceid
      in: path
      required: true
      schema:
        type: number
    cohortid:
      name: cohortid
      in: path
      required: true
      schema:
        type: number
    casecohortid:
      name: casecohortid
      in: path
      required: true
      schema:
        type: number
    controlcohortid:
      name: controlcohortid
      in: path
      required: true
      schema:
        type: number
    filterconceptid:
      name: filterconceptid
      in: path
      required: true
      schema:
        type: number
    filtervalue:
      name: filtervalue
      in: path
      required: true
      schema:
        type: number
    breakdownconceptid:
      name: breakdownconceptid
      in: path
      required: true
      schema:
        type: number
security:
  - API Key: []
tags:
  - name: data
  - name: operational
